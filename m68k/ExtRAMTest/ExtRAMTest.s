* Test External SRAM
* External SRAM on the RETRO-EP4CE15 card goes from 0x300000 to 0x3FFFFF (1 MB)
* External SRAM only supports 8-bit accesses
* TUTOR14 uses SRAM from 0x000000 to 0x000800

RAMSTART	= 0X300000
RAMEND		= 0X3FFFFF
ACIASTAT	= 0x010041
ACIADATA	= 0x010043

* Code follows

	.ORG    0x001000

STARTTEST:
	MOVE.L  #0x00300000,%A0
	MOVE.B  #0x55,%D0
	MOVE.B	%D0,(%A0)
    NOP
    MOVE.B	(%A0),%D1
    CMP.B   %D0,%D1
    BNE     FAIL
	MOVE.B  #0xAA,%D0
	MOVE.B	%D0,(%A0)
    NOP
    MOVE.B	(%A0),%D1
    CMP.B   %D0,%D1
    BNE     FAIL
    MOVE.B  #0X01,%D0
	MOVE.L  #0x00300000,%A0
CHKBLKS:
    ADD.L   #0x00010000,%A0
    CMP.L   #0x00400000,%A0
    BEQ     DONEFILL
    MOVE.B  D0,(%A0)
    ADDI.B  #0x01,D0
    BRA     CHKBLKS
DONEFILL:
    MOVE.B  #0X01,%D0
	MOVE.L  #0x00300000,%A0
LOOPCHK:
    ADD.L   #0x00010000,%A0
    CMP.L   #0x00400000,%A0
    BEQ     DONECHK
    MOVE.B  (%A0),%D1
    CMP.B   %D0,%D1
    BNE     FAIL
    ADDI.B  #0x01,%D0
    BRA     LOOPCHK
DONECHK:
    JSR     WAITRDY
	MOVE.B	#'O',%D1
	JSR     OUTCHAR
	MOVE.B	#'K',%D1
	JSR     OUTCHAR
    RTS
FAIL:
    JSR     WAITRDY
	MOVE.B	#'F',%D1
	JSR     OUTCHAR
	RTS

* WAIT FOR THE SERIAL PORT TO BE READY
WAITRDY:
	LEA     ACIASTAT,%A1
LOOPRDY:
	MOVE.B	(%A1),%D1
	ANDI.B	#0x2,%D1
	BEQ		LOOPRDY
    RTS

* OUTPUT A CHARACTER IN D1 TO THE ACIA
OUTCHAR:
	LEA     ACIADATA,%A1
	MOVE.B	%D1,(%A1)
    RTS
    

