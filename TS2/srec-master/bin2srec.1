.Dd March 6, 2015
.Dt bin2srec 1
.Os kk_srec
.Sh NAME
.Nm bin2srec
.Nd Convert binary data to Motorola SREC
.Sh SYNOPSIS
.Nm
.Op Fl a Ar address_offset
.Op Fl b Ar address_bytes
.Op Fl h Ar header_text
.Op Fl i Ar input_file.bin
.Op Fl o Ar output_file.srec
.Op Fl x Ar execution_start
.Op Fl v
.Sh DESCRIPTION
.Nm
reads binary data from standard input, and writes Motorola SREC
encoded ASCII to standard output.
.Sh OPTIONS
.Bl -tag -width -indent
.It Fl a Ar address_offset
Set the address of the first input byte to
.Ar address_offset
- by default zero is used (i.e., SREC addresses correspond to
positions in the input file).
.It Fl b Ar address_bytes
Set the number of address bytes (2 = 16-bit, 3 = 24-bit, 4 = 32-bit) to
.Ar address_bytes
- by default the least amount required for the input file is used,
or 4 if the input is a stream.
.It Fl h Ar header_text
Set the header ASCII comment text to
.Ar header_text
- by default the input file name is used.
.It Fl i Ar file
Read the binary input from
.Ar file
instead of standard input.
.It Fl o Ar file
Write the SREC output to
.Ar file
instead of standard output.
.It Fl x Ar execution_start
Set the execution start address to
.Ar execution_start
- by default zero is written (as it is often ignored).
.It Fl v
Print extra status messages to standard error.
.El
.Sh EXAMPLES
Read binary data from
.Ar input.bin
and write the Motorola S-Record output to
.Ar output.srec
with autodetected address byte count:
.Pp
.Bd -ragged -offset indent
.Nm
.Fl i
.Ar input.bin
.Fl o
.Ar output.srec
.Ed
.Pp
Read binary data from
.Ar input.bin
and write the SREC output to
.Ar output.srec
such that the offset
.Ar 0x80000
is added to addresses, which are written in
.Ar 4
bytes (32-bits), and write
.Ar 0xA0000
as the execution start address:
.Bd -ragged -offset indent
.Nm
.Fl a
.Ar 0x80000
.Fl b
.Ar 4
.Fl i
.Ar input.bin
.Fl o
.Ar output.srec
.Fl x
.Ar 0xA0000
.Ed
.Sh AUTHOR
.An "Kimmo Kulovesi" Aq http://arkku.com
