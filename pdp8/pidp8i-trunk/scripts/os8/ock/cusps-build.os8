# Comments begin with an octothorpe
# Blank lines are ignored.

# OS/8 Writes on the system device (architectural flaw).
# Since this might be run from a parallel make, we mount the system
# with the scratch option to make a unique copy.
mount rk0 $os8mo/v3d-patched.rk05 required scratch
copy $obj/ock-cusps-src.rk05 $os8mo/ock-cusps-obj.rk05
mount rk1 $os8mo/ock-cusps-obj.rk05 required

boot rk0

print Building DIRECT.SV
pal8 RKB1:DIRECT.BN<RKA1:DIRECT.PA
begin cdprog SYS:ABSLDR.SV
RKB1:DIRECT.BN(89P)=14600
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:DIRECT.SV;14600=6403
os8 DEL RKB1:DIRECT.BN

print Building FOTP.SV
pal8 RKB1:FOTP.BN<RKA1:FOTP.PA
begin cdprog SYS:ABSLDR.SV
RKB1:FOTP.BN(89P)=14600
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:FOTP.SV;14600=6403
os8 DEL RKB1:FOTP.BN

print Building PIP.SV
pal8 RKB1:PIP.BN<RKA1:PIP.PA
begin cdprog SYS:ABSLDR.SV
RKB1:PIP.BN(89P)=13000
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:PIP.SV;13000=6403
os8 DEL RKB1:PIP.BN

print Building HELP.SV
pal8 RKB1:HELP.BN<RKA1:HELP.PA
begin cdprog SYS:ABSLDR.SV
RKB1:HELP.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:HELP.SV=3401
os8 DEL RKB1:HELP.BN

print Building BOOT.SV
pal8 RKB1:BOOT.BN<RKA1:BOOT.PA
begin cdprog SYS:ABSLDR.SV
RKB1:BOOT.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:BOOT.SV
os8 DEL RKB1:BOOT.BN

print Building EPIC.SV
pal8 RKB1:EPIC.BN<RKA1:EPIC.PA
begin cdprog SYS:ABSLDR.SV
RKB1:EPIC.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:EPIC.SV
os8 DEL RKB1:EPIC.BN

print Building FUTIL.SV
pal8 RKB1:FUTIL.BN<RKA1:FUTIL.PA
begin cdprog SYS:ABSLDR.SV
RKB1:FUTIL.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:FUTIL.SV;6400=0400
os8 DEL RKB1:FUTIL.BN

print Building SET.SV
pal8 RKB1:SET.BN<RKA1:SET.PA
begin cdprog SYS:ABSLDR.SV
RKB1:SET.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:SET.SV
os8 DEL RKB1:SET.BN

print Building EDIT.SV
pal8 RKB1:EDIT.BN<RKA1:EDIT.PA
begin cdprog SYS:ABSLDR.SV
RKB1:EDIT.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:EDIT.SV
os8 DEL RKB1:EDIT.BN

print Building PAL8.SV
pal8 RKB1:PAL8.BN<RKA1:PAL8.PA
begin cdprog SYS:ABSLDR.SV
RKB1:PAL8.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:PAL8.SV
os8 DEL RKB1:PAL8.BN

print Building CREF.SV
pal8 RKB1:CREF.BN<RKA1:CREF.PA
begin cdprog SYS:ABSLDR.SV
RKB1:CREF.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:CREF.SV
os8 DEL RKB1:CREF.BN

print Building BITMAP.SV
pal8 RKB1:BITMAP.BN<RKA1:BITMAP.PA
begin cdprog SYS:ABSLDR.SV
RKB1:BITMAP.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:BITMAP.SV;12000=6001
os8 DEL RKB1:BITMAP.BN

print Building SRCCOM.SV
pal8 RKB1:SRCCOM.BN<RKA1:SRCCOM.PA
begin cdprog SYS:ABSLDR.SV
RKB1:SRCCOM.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:SRCCOM.SV
os8 DEL RKB1:SRCCOM.BN

print Building TECO.SV
pal8 RKB1:TECO.BN<RKA1:TECO.PA/W
begin cdprog SYS:ABSLDR.SV
RKB1:TECO.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:TECO.SV=2000
os8 DEL RKB1:TECO.BN

print Building RXCOPY.SV
pal8 RKB1:RXCOPY.BN<RKA1:RXCOPY.PA
begin cdprog SYS:ABSLDR.SV
RKB1:RXCOPY.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:RXCOPY.SV;16000=7403
os8 DEL RKB1:RXCOPY.BN

print Building RKLFMT.SV
pal8 RKB1:RKLFMT.BN<RKA1:RKLFMT.PA
begin cdprog SYS:ABSLDR.SV
RKB1:RKLFMT.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:RKLFMT.SV=0000
os8 DEL RKB1:RKLFMT.BN

print Building MCPIP.SV
pal8 RKB1:MCPIP.BN<RKA1:MCPIP.PA
begin cdprog SYS:ABSLDR.SV
RKB1:MCPIP.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:MCPIP.SV;12000=6403
os8 DEL RKB1:MCPIP.BN

print Building MSBAT.SV
pal8 RKB1:MSBAT.BN<RKA1:MSBAT.PA
begin cdprog SYS:ABSLDR.SV
RKB1:MSBAT.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:MSBAT.SV=0000
os8 DEL RKB1:MSBAT.BN

print Building PIP10.SV
pal8 RKB1:PIP10.BN<RKA1:PIP10.PA
begin cdprog SYS:ABSLDR.SV
RKB1:PIP10.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:PIP10.SV=2000
os8 DEL RKB1:PIP10.BN

print Building CAMP.SV
pal8 RKB1:CAMP.BN<RKA1:CAMP.PA
begin cdprog SYS:ABSLDR.SV
RKB1:CAMP.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:CAMP.SV=2000
os8 DEL RKB1:CAMP.BN

print Building DTCOPY.SV
pal8 RKB1:DTCOPY.BN<RKA1:DTCOPY.PA
begin cdprog SYS:ABSLDR.SV
RKB1:DTCOPY.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:DTCOPY.SV=2000
os8 DEL RKB1:DTCOPY.BN

print Building DTFRMT.SV
pal8 RKB1:DTFRMT.BN<RKA1:DTFRMT.PA
begin cdprog SYS:ABSLDR.SV
RKB1:DTFRMT.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:DTFRMT.SV;1000=2000
os8 DEL RKB1:DTFRMT.BN

print Building TDCOPY.SV
pal8 RKB1:TDCOPY.BN<RKA1:TDCOPY.PA
begin cdprog SYS:ABSLDR.SV
RKB1:TDCOPY.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:TDCOPY.SV=2000
os8 DEL RKB1:TDCOPY.BN

print Building TDFRMT.SV
pal8 RKB1:TDFRMT.BN<RKA1:TDFRMT.PA
begin cdprog SYS:ABSLDR.SV
RKB1:TDFRMT.BN
end cdprog SYS:ABSLDR.SV
os8 SAVE RKB1:TDFRMT.SV;1000=2000
os8 DEL RKB1:TDFRMT.BN
